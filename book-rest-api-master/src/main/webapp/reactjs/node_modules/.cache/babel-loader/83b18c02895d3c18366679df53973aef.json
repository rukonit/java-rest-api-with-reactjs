{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khan2r\\\\Java Portfolios\\\\book-rest-api-master\\\\src\\\\main\\\\webapp\\\\reactjs\\\\src\\\\components\\\\Book.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faPlusSquare, faUndo, faList } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport MyToast from './MyToast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Book extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      title: '',\n      author: '',\n      coverPhotoURL: '',\n      isbnNumber: '',\n      price: '',\n      language: ''\n    };\n\n    this.findBookId = bookId => {\n      axios.get(\"http://localhost:8081/rest/books/\" + bookId).then(response => {\n        if (response.data != null) {\n          this.setState({\n            id: response.data.id,\n            title: response.data.title,\n            author: response.data.author,\n            coverPhotoURL: response.data.coverPhotoURL,\n            isbnNumber: response.data.isbnNumber,\n            price: response.data.price,\n            language: response.data.language\n          });\n        }\n      }).catch(error => {\n        console.error(\"Error - \" + error);\n      });\n    };\n\n    this.submitBook = event => {\n      event.preventDefault();\n      const headers = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const book = {\n        title: this.state.title,\n        author: this.state.author,\n        coverPhotoURL: this.state.coverPhotoURL,\n        isbnNumber: this.state.isbnNumber,\n        price: this.state.price,\n        language: this.state.language\n      };\n      axios.post(\"http://localhost:8081/rest/books\", book, headers).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.bookChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.resetBook = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.bookList = () => {\n      return this.props.history.push(\"/list\");\n    };\n\n    this.state = this.initialState;\n    this.bookChange = this.bookChange.bind(this);\n    this.submitBook = this.submitBook.bind(this);\n    this.state.show = false;\n  }\n\n  componentDidMount() {\n    const bookId = +this.props.match.params.id;\n\n    if (bookId) {\n      this.findBookId();\n    }\n  }\n\n  render() {\n    const {\n      title,\n      author,\n      coverPhotoURL,\n      isbnNumber,\n      price,\n      language\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"display\": this.state.show ? \"block\" : \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MyToast, {\n          show: this.state.show,\n          message: \"Book Saved Successfully\",\n          type: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-dark bg-dark text-white\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlusSquare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 26\n          }, this), \" Add Book\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.submitBook,\n          id: \"bookFormId\",\n          onReset: this.resetBook,\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridTitle\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"title\",\n                  value: title,\n                  onChange: this.bookChange,\n                  required: true,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter Book Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridAuthor\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Author\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"author\",\n                  value: author,\n                  onChange: this.bookChange,\n                  required: true,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter Book Author Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridcoverPhtoURL\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Cover Photo URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"coverPhotoURL\",\n                  value: coverPhotoURL,\n                  onChange: this.bookChange,\n                  required: true,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter Cover Photo URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridisbnNumber\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Book ISBN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"isbnNumber\",\n                  value: isbnNumber,\n                  onChange: this.bookChange,\n                  required: true,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter ISBN Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridPrice\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"price\",\n                  value: price,\n                  onChange: this.bookChange,\n                  required: true,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter Book Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridLanguage\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"language\",\n                  value: language,\n                  onChange: this.bookChange,\n                  required: true,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter Book Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            style: {\n              \"textAlign\": \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSave\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), \" Submit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              type: \"reset\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faUndo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), \" Reset\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              type: \"button\",\n              onClick: this.bookList.bind(),\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), \" Book List\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khan2r/Java Portfolios/book-rest-api-master/src/main/webapp/reactjs/src/components/Book.js"],"names":["React","Component","Card","Form","Button","Col","FontAwesomeIcon","faSave","faPlusSquare","faUndo","faList","axios","MyToast","Book","constructor","props","initialState","id","title","author","coverPhotoURL","isbnNumber","price","language","findBookId","bookId","get","then","response","data","setState","catch","error","console","submitBook","event","preventDefault","headers","book","state","post","setTimeout","bookChange","target","name","value","resetBook","bookList","history","push","bind","show","componentDidMount","match","params","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Component} from 'react';\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSave, faPlusSquare, faUndo, faList} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport MyToast from './MyToast';\r\n\r\nexport default class Book extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.bookChange = this.bookChange.bind(this);\r\n        this.submitBook = this.submitBook.bind(this);\r\n        this.state.show = false;\r\n    }\r\n\r\n    initialState = {\r\n        id: '', title:'', author:'', coverPhotoURL:'', isbnNumber: '', price:'', language:''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const bookId = +this.props.match.params.id;\r\n        if(bookId) {\r\n           this.findBookId();\r\n        }\r\n    }\r\n\r\n    findBookId = (bookId) => {\r\n        axios.get(\"http://localhost:8081/rest/books/\" + bookId)\r\n        .then(response => {\r\n            if(response.data != null){\r\n               this.setState({\r\n                   id: response.data.id,\r\n                   title: response.data.title,\r\n                   author: response.data.author,\r\n                   coverPhotoURL: response.data.coverPhotoURL,\r\n                   isbnNumber: response.data.isbnNumber,\r\n                   price: response.data.price,\r\n                   language: response.data.language\r\n               }) \r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Error - \" + error)\r\n        } )\r\n\r\n    }\r\n\r\n    submitBook = (event) => {\r\n  \r\n        event.preventDefault()\r\n        const headers =  {headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        }\r\n        \r\n        \r\n        const book = {\r\n            title: this.state.title, \r\n            author: this.state.author,\r\n            coverPhotoURL: this.state.coverPhotoURL, \r\n            isbnNumber: this.state.isbnNumber, \r\n            price: this.state.price, \r\n            language: this.state.language\r\n        };\r\n\r\n        axios.post(\"http://localhost:8081/rest/books\", book, headers)\r\n        .then(response => {\r\n            if(response.data != null){\r\n                this.setState({\"show\": true})\r\n                setTimeout(() => this.setState({\"show\": false}), 3000)\r\n            }\r\n            else {\r\n                this.setState({\"show\": false})\r\n            }\r\n        })\r\n        this.setState(this.initialState);\r\n    } \r\n\r\n    bookChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    resetBook = () => {\r\n        this.setState(() => this.initialState);\r\n    }\r\n\r\n    bookList = () => {\r\n        return this.props.history.push(\"/list\")\r\n    }\r\n\r\n    render() {\r\n        const {title, author, coverPhotoURL, isbnNumber, price, language} = this.state;\r\n        return(\r\n            <div>\r\n                \r\n                <div style={{\"display\": this.state.show ? \"block\": \"none\"}}>\r\n                   <MyToast show = {this.state.show}  message={\"Book Saved Successfully\"} type={\"success\"}/> \r\n                </div>\r\n               \r\n                <Card className=\"border border-dark bg-dark text-white\">\r\n            <Card.Header><FontAwesomeIcon icon={faPlusSquare} /> Add Book</Card.Header>\r\n            \r\n            <Form onSubmit={this.submitBook} id=\"bookFormId\"\r\n            onReset={this.resetBook}>\r\n            <Card.Body>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridTitle\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"title\"\r\n                        value = {title}\r\n                        onChange={this.bookChange} required\r\n                        className={\"bg-dark text-white\"} placeholder=\"Enter Book Title\" />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridAuthor\">\r\n                        <Form.Label>Author</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"author\"\r\n                        value = {author}\r\n                        onChange={this.bookChange} required\r\n                        className={\"bg-dark text-white\"} placeholder=\"Enter Book Author Name\" />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridcoverPhtoURL\">\r\n                        <Form.Label>Cover Photo URL</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"coverPhotoURL\"\r\n                        value = {coverPhotoURL}\r\n                        onChange={this.bookChange} required\r\n                        className={\"bg-dark text-white\"} placeholder=\"Enter Cover Photo URL\" />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridisbnNumber\">\r\n                        <Form.Label>Book ISBN</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"isbnNumber\"\r\n                        value = {isbnNumber}\r\n                        onChange={this.bookChange} required\r\n                        className={\"bg-dark text-white\"} placeholder=\"Enter ISBN Number\" />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPrice\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"price\"\r\n                        value = {price}\r\n                        onChange={this.bookChange} required\r\n                        className={\"bg-dark text-white\"} placeholder=\"Enter Book Price\" />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridLanguage\">\r\n                        <Form.Label>Language</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"language\"\r\n                        value = {language}\r\n                        onChange={this.bookChange} required\r\n                        className={\"bg-dark text-white\"} placeholder=\"Enter Book Language\" />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n               \r\n                \r\n            </Card.Body>\r\n            <Card.Footer style={{\"textAlign\":\"right\"}}>\r\n                <Button variant=\"success\" type=\"submit\">\r\n                <FontAwesomeIcon icon={faSave} /> Submit\r\n                    \r\n                </Button>\r\n                {' '}\r\n                <Button variant=\"info\" type=\"reset\">\r\n                <FontAwesomeIcon icon={faUndo} /> Reset\r\n                    \r\n                </Button>\r\n                {' '}\r\n                <Button variant=\"info\" type=\"button\" onClick={this.bookList.bind()}>\r\n                <FontAwesomeIcon icon={faList} /> Book List\r\n                    \r\n                </Button>\r\n            </Card.Footer>\r\n            </Form> \r\n            \r\n        </Card>\r\n            </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}